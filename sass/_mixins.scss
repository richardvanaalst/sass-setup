// SASS import file: will be imported in other SASS files
// Base mixins



// Calculate sizes from px to em
// +0.00001 for browser's rounding issues
@function em($size, $base-font-size: $base-font-size) {
	$new-size: 1em * ($size / $base-font-size + 0.00001);
	@return $new-size;
}



// Hide the element, when dir=ltr
@mixin hide() {
	position: absolute;
	top: auto;
	left: 100%; // -999em;
	right: auto;
}



// Hide the text inside the element, when dir=ltr
@mixin hide-text() {
	display: block;
	overflow: hidden;
	text-indent: 100%; // -999em;
	//direction: ltr;
	white-space: nowrap;
}



// Remove list-style
@mixin no-list-style() {
	margin: 0;
	padding: 0;
	list-style: none;
}



// Before and after pseudo-elements
@mixin pseudo($width: false, $height: false, $display: block, $content: " ") {
	display: $display;
	content: $content;
	@if ($width) {
		width: $width;
	}
	@if ($height) {
		height: $height;
	}
}



// Background colour with transparency and fallback
@mixin background-color($color: white, $a: 1) {
	@if ($a < 1) {
		/* Fallback for older browsers: */
	}

	background-color: $color;

	@if ($a < 1) {
		background-color: rgba($color, $a);
	}
}



// Background gradient with fallback
@mixin background-gradient($gradient, $fallback) {
	@if ($fallback) {
		/* Fallback for older browsers: */
		background-color: $fallback;
	}

	@include background-image($gradient);
}



// Background linear gradient with fallback
@mixin linear-gradient($from, $to, $fallback: false) {
	/* Fallback for older browsers: */
	@if ($fallback) {
		background-color: $fallback;
	}
	@else {
		background-color: mix($from, $to);
	}

	$gradient: linear-gradient($from, $to);

	@include background-image($gradient);
}



// Better to use Compass sprite helper!
// Image sprites, with and without grid per sprite
// Default image name: sprite-32grid.png
@mixin sprite($x: -100%, $y: -100%, $sprite: "32grid") {
	background: {
		image: url("../img/sprite-#{$sprite}.png");
		repeat: no-repeat;
	}

	@include sprite-position($x, $y, $sprite);
}

@mixin sprite-position($x: -100%, $y: -100%, $sprite: "32grid") {
	$gridX: 1;
	$gridY: 1;

	@if ($sprite == "32grid") {
		@if (unitless($x) and $x > 0) {
			$gridX: -32px;
		}
		@if (unitless($y) and $y > 0) {
			$gridY: -32px;
		}
	}

	$x: $gridX * $x;
	$y: $gridY * $y;

	background-position: $x $y;
}


